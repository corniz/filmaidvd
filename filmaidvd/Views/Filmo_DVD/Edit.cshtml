@model Autonuoma.Models.Filmo_DVDCE

@* this will also be used as page title in main layout *@
@{ ViewData["title"] = "Automobilio redagavimas"; }

@* content header *@
<div class="main-content-header">
	<span class="title">@ViewData["title"]</span>
	<span class="actions">
		<a 
			href="@Url.Action("Index")" 
			class="btn btn-outline-primary btn-sm"
		>
			<i class="fa-solid fa-angles-left"></i> Atgal į sarašą
		</a>
	</span>
</div>

@* content itself *@
<div class="main-content-ced">
@using( Html.BeginForm(FormMethod.Post, new { @class="entity-ce" }) )
{
	@Html.AntiForgeryToken()
	
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	
	@* add hidden form fields for non-visible properties, otherwise they will get lost in code that handles button presses *@
		@Html.HiddenFor(m => m.Filmo_DVD.Kurejai)

	<fieldset>
		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Id)
				@Html.EditorFor(m => m.Filmo_DVD.Id)
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Id, "")
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Verte)
				@Html.TextBoxFor(m => m.Filmo_DVD.Verte)
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Verte, "")
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Aktoriai)
				@Html.TextBoxFor(m => m.Filmo_DVD.Aktoriai)
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Aktoriai, "")
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Ivertinimas)
			<div>
					@Html.TextBoxFor(m => m.Filmo_DVD.Ivertinimas)
					@Html.ValidationMessageFor(m => m.Filmo_DVD.Ivertinimas, "")
			</div>
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Kurejai)
			<div>
					@Html.EditorFor(m => m.Filmo_DVD.Kurejai)
					@Html.ValidationMessageFor(m => m.Filmo_DVD.Kurejai, "")
			</div>
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Aprasymas)
			<div>
					@Html.EditorFor(m => m.Filmo_DVD.Aprasymas)
					@Html.ValidationMessageFor(m => m.Filmo_DVD.Aprasymas, "")
			</div>
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Ilgumas)
				@Html.EditorFor(m => m.Filmo_DVD.Ilgumas)
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Ilgumas, "")
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Kalba)
				@Html.TextBoxFor(m => m.Filmo_DVD.Kalba)
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Kalba, "")
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Rezoliucija)
				@Html.EditorFor(m => m.Filmo_DVD.Rezoliucija)
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Rezoliucija, "")
		</div>

		<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Kiekis)
				@Html.EditorFor(m => m.Filmo_DVD.Kiekis)
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Kiekis, "")
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Filmo_DVD.Zanras)
				@Html.DropDownListFor(m => m.Filmo_DVD.Zanras, Model.Lists.Zanras, (string)ViewData["none-chosen"])
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Zanras, "")
		</div>

			<div class="form-group">
				@Html.LabelFor(m => m.Filmo_DVD.Apribojimai)
				@Html.DropDownListFor(m => m.Filmo_DVD.Apribojimai, Model.Lists.Apribojimai, (string)ViewData["none-chosen"])
				@Html.ValidationMessageFor(m => m.Filmo_DVD.Apribojimai, "")
			</div>
	</fieldset>

	<div class="container-fluid d-flex d-row justify-content-end">
		<button name="save" value="1" class="btn btn-success"><i class="fa-solid fa-floppy-disk"></i> Išsaugoti</button>
	</div>
}
</div>

@* content footer *@
<div class="main-content-footer">
	<span class="title"></span>
	<span class="actions">
		<a 
			href="@Url.Action("Index")" 
			class="btn btn-outline-primary btn-sm"
		>
			<i class="fa-solid fa-angles-left"></i> Atgal į sarašą
		</a>
	</span>
</div>